<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>